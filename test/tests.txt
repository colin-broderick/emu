test0.bin
===============================================================================
Loads values into A and stores them elsewhere in memory.


test1.bin
===============================================================================
Loads a value into A, copies it into X, increments X, then adds the two values.


test2.bin
===============================================================================
Loads the value 0x08 into X. Decrements X in a loop until X = 3, then stores
the final value of X in address 0x0201.


test4.bin
===============================================================================
Tests the STA instruction. This test is broken because the program overwrites
itself. This is because the example I drew from assumed the IP started at
0x0600, and stores data around 0x0000, whereas my program starts at 0x0000 and
stores data in the same place.
    As it happens, this program is still able to complete successfully, but
self-altering programs should be avoided in general.


test5.bin
===============================================================================
This program increments Y and X until X = Y = 0x10, then continues incrementing
Y only until Y = 0x20. In the first stage, the value of X is pushed onto the
stack at every iteration. In the second stage, the value is pulled from the
stack into A at every iteration.
    Throughout, the value of X (or A) is put into memory creating a mirrored
pattern. Something like this could be used to draw pixels to a display buffer.
